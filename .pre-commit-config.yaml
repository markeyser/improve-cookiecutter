# See https://pre-commit.com/ for more information
# See https://pre-commit.com/hooks.html for more hooks

# TODO: Tasks pending completion -@t93kqi0 at 12/30/2022, 11:57:42 AM
# The linter we are using is Pylint. Inlcue Pylint configuration. The
# other linters can capture other issues but Pylint is the core one we use.
# ref:
# https://pylint.pycqa.org/en/latest/user_guide/installation/pre-commit-integration.html

repos:
  ###########################################################################
  ### BLACK - Python formatter -
  ###########################################################################
  # Black is the uncompromising Python code formatter.
  # # fmt: off disables formatting for all following lines until
  # formatting is activated again with # fmt: on. For example:
  #
  #                       # fmt: off
  #                       np.array(
  #                           [
  #                               [1, 0, 0, 0],
  #                               [0, -1, 0, 0],
  #                               [0, 0, 1, 0],
  #                               [0, 0, 0, -1],
  #                           ]
  #                       )
  #                       # fmt: on
  - repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
      - id: black
        args:
          - --config=pyproject.toml
          # Also emit messages to stderr about files
          # that were not changed or were ignored due to
          # exclusion patterns.
          - --verbose
          # Enable potentially disruptive style changes
          # that may be added to Black's main
          # functionality in the next major release.
          - --preview
  ###########################################################################
  ### PYLINT - Python linter -
  ###########################################################################
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: pylint
        language: system
        types: [python]
        args:
          [
            "-rn", # Only display messages
          ]
          #"-sn", # Don't display the score

  ###########################################################################
  ### FLAKE8 - Python Error & Style Linter, Complexity Analysis -
  ###########################################################################
  - repo: https://github.com/PyCQA/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        # To avoid conflict with Black:
        # ignore E402 module level import not at top of file
        # ignore W503 line break before binary operator
        args: ["--ignore=E402,W503"]

  ###########################################################################
  ### MYPY - Python linter -
  ###########################################################################
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.782
    hooks:
      - id: mypy
        args: [--ignore-missing-imports]

  ###########################################################################
  ### ISORT - Python linter -
  ###########################################################################
  # Sort imports
  - repo: https://github.com/PyCQA/isort
    rev: 5.11.4
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"] # [--profile=black]

  ###########################################################################
  ### AUTOFLAKE - Python linter
  ###########################################################################
  # TODO: Tasks pending completion -@t93kqi0 at 2/3/2023, 1:01:17 PM
  # Remove autflake flake8 and Pyflakes do the same job.
  # autoflake is extremely limited and has a poor choice of name: It
  # removes unused standard library imports and unnecessary pass
  # statements. That's it. The name comes from the fact that it uses
  # Pyflakes to do this.
  # I'd pass on this. Pyflakes, flake8, or the other linters can already
  # point out unused imports, so a dedicated package to do this seems
  # redundant to me.
  # Remove unused imports and variables
  - repo: https://github.com/myint/autoflake
    rev: v1.4
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --expand-star-imports
          - --remove-duplicate-keys
          - --remove-unused-variables

  ###########################################################################
  ### INTERROGATE - Python linter -
  ###########################################################################
  # Checks your code base for missing docstrings
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        #args: [-vv, -i, --fail-under=95]
        args: [--config=pyproject.toml]

  ###########################################################################
  ### PYMARKDOWN  - Markdonw linter -
  ###########################################################################
  # Markdown lintern
  # GitHub main page: https://github.com/jackdewinter/pymarkdown
  # GitHub pre-commit set up page:
  # https://github.com/jackdewinter/pymarkdown/blob/main/docs/pre-commit.md
  - repo: https://github.com/jackdewinter/pymarkdown
    rev: v0.9.7
    hooks:
      - id: pymarkdown
        args:
          # Disable rule MD046 (code-block-style) to avoid confilict
          # with MkDocs admonitions
          - --disable-rules
          - code-block-style
          - scan

  ###########################################################################
  ### PRE-COMMIT HOOKS
  ###########################################################################
  # Pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.1.0
    hooks:
      # BUG: Reported defects -@t93kqi0 at 12/29/2022, 5:09:44 PM
      # Too old Git vesion https://github.com/pre-commit/pre-commit-hooks/issues/718
      # - id: check-added-large-files # prevents giant files from being
      #   committed.
      # TODO: Tasks pending completion -@t93kqi0 at 2/3/2023, 1:17:50 PM
      # Create an ad-hoc commit for large issues.
      # checks for files that would conflict in case-insensitive filesystems.
      - id: check-case-conflict
      # checks for files that contain merge conflict strings.
      - id: check-merge-conflict
      # checks yaml files for parseable syntax.
      - id: check-yaml
      # detects the presence of private keys.
      - id: detect-private-key
      # ensures that a file is either empty, or ends with one newline.
      - id: end-of-file-fixer
      # removes utf-8 byte order marker.
      - id: fix-byte-order-marker
      # replaces or checks mixed line ending.
      - id: mixed-line-ending
      # sorts entries in requirements.txt.
      - id: requirements-txt-fixer
      # trims trailing whitespace.
      - id: trailing-whitespace
